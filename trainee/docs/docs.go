// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/log": {
            "get": {
                "description": "Get log of user's segments operations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get log",
                "parameters": [
                    {
                        "description": "Log JSON",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.LogRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.LogResponse"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    }
                }
            }
        },
        "/segment": {
            "post": {
                "description": "Create new segment by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add new segment",
                "parameters": [
                    {
                        "description": "Segment JSON",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.Segment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/core.SegmentResponse"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete segment by slug",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete segment",
                "parameters": [
                    {
                        "description": "Segment JSON",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.Segment"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/core.SegmentResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Return user with it's active segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get user by id",
                "parameters": [
                    {
                        "description": "User JSON",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.UserId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/core.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "Add and delete user's active segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Edit active segments",
                "parameters": [
                    {
                        "description": "User Request JSON",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/core.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/core.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    },
                    "405": {
                        "description": "Method Not Allowed",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/core.FailureMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "core.FailureMessage": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "core.LogRequestDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "period": {
                    "type": "string"
                }
            }
        },
        "core.LogResponse": {
            "type": "object",
            "properties": {
                "cssFile": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "core.Segment": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                }
            }
        },
        "core.SegmentResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/core.Segment"
                }
            }
        },
        "core.User": {
            "type": "object",
            "properties": {
                "activeSegment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Segment"
                    }
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "core.UserId": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "core.UserRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "segmentsToAdd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Segment"
                    }
                },
                "segmentsToDelete": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/core.Segment"
                    }
                }
            }
        },
        "core.UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/core.User"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Test task",
	Description:      "This is a avito task",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
